const sheetId = "1GjR7GyIU9HdQmBirIEfjGNN1UpesJLoqp8kPwmrn1NE";

// ì‹œíŠ¸ë³„ API ì£¼ì†Œ
const apiQuiz = `https://opensheet.elk.sh/${sheetId}/quiz`;
const apiType = `https://opensheet.elk.sh/${sheetId}/type`;
const apiScore = `https://opensheet.elk.sh/${sheetId}/score`;

let questions = [];
let currentQuestion = 0;
let answers = [];

// ì§ˆë¬¸ ë¶ˆëŸ¬ì˜¤ê¸°
async function loadQuestions() {
  try {
    const res = await fetch(apiQuiz);
    const data = await res.json();

    // ðŸ”‘ ì»¬ëŸ¼ëª… ë§¤ì¹­ (id, questions)
    questions = data.map(row => ({
      id: row.id,
      text: row.questions,   // ì‹œíŠ¸ ì»¬ëŸ¼ ê·¸ëŒ€ë¡œ ì‚¬ìš©
      options: ["ì „í˜€ ê·¸ë ‡ì§€ ì•Šë‹¤", "ê·¸ë ‡ì§€ ì•Šë‹¤", "ê·¸ë ‡ë‹¤", "ë§¤ìš° ê·¸ë ‡ë‹¤"] // ê¸°ë³¸ 4ì§€ì„ ë‹¤
    }));

    showQuestion();
  } catch (err) {
    console.error("ì§ˆë¬¸ ë¶ˆëŸ¬ì˜¤ê¸° ì‹¤íŒ¨:", err);
  }
}

// ì§ˆë¬¸ ë³´ì—¬ì£¼ê¸°
function showQuestion() {
  if (currentQuestion >= questions.length) {
    showResult();
    return;
  }

  const q = questions[currentQuestion];

  // ì§„í–‰ë¥  í‘œì‹œ (1/30)
  document.getElementById("progress").textContent = `${currentQuestion + 1} / ${questions.length}`;

  // ì§ˆë¬¸ ë²ˆí˜¸ + ë‚´ìš©
  document.getElementById("question").textContent = `${q.id}. ${q.text}`;

  const optionsDiv = document.getElementById("options");
  optionsDiv.innerHTML = "";

  q.options.forEach((opt, i) => {
    const btn = document.createElement("button");
    btn.textContent = opt;
    btn.classList.add("option-btn");
    btn.addEventListener("click", () => {
      answers.push({ id: q.id, answer: i + 1 });
      currentQuestion++;
      showQuestion();
    });
    optionsDiv.appendChild(btn);
  });
}

// ê²°ê³¼ ê³„ì‚° (ìž„ì‹œ)
function showResult() {
  document.getElementById("quiz-container").innerHTML = `
    <h2>ê²°ê³¼</h2>
    <pre>${JSON.stringify(answers, null, 2)}</pre>
  `;
}

// ì‹¤í–‰
loadQuestions();
